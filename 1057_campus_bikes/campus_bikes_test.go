package campus_bikes

import (
	"reflect"
	"testing"
)

type Test struct {
	workers [][]int
	bikes   [][]int
	want    []int
}

var tests = []Test{
	{[][]int{{0, 0}, {2, 1}}, [][]int{{1, 2}, {3, 3}}, []int{1, 0}},
	{[][]int{{0, 0}, {1, 1}, {2, 0}}, [][]int{{1, 0}, {2, 2}, {2, 1}}, []int{0, 2, 1}},
	{
		[][]int{{498, 310}, {47, 73}, {28, 607}, {932, 217}, {173, 873}, {339, 800}, {165, 935}, {13, 579}, {650, 612}, {17, 960}, {819, 988}, {449, 371}, {398, 715}, {525, 589}, {83, 604}, {382, 880}, {15, 243}, {828, 612}, {970, 827}, {33, 550}, {649, 410}, {828, 436}, {804, 512}, {431, 954}, {849, 364}, {210, 807}, {928, 335}, {213, 625}, {740, 614}, {785, 805}, {128, 916}, {32, 600}, {944, 382}, {929, 793}, {204, 381}, {677, 180}, {257, 392}, {901, 88}, {831, 399}, {665, 306}, {188, 257}, {386, 608}, {63, 239}, {337, 207}, {198, 606}, {310, 830}, {929, 417}, {682, 872}, {996, 45}, {861, 174}, {577, 916}, {593, 675}, {564, 2}, {540, 150}, {61, 403}, {674, 339}, {537, 963}, {609, 170}, {954, 540}, {508, 767}, {418, 812}, {297, 8}, {100, 420}, {811, 235}},
		[][]int{{691, 42}, {640, 677}, {305, 248}, {851, 971}, {314, 739}, {723, 677}, {358, 316}, {411, 286}, {306, 210}, {384, 614}, {479, 191}, {926, 968}, {506, 959}, {643, 852}, {619, 564}, {539, 830}, {734, 444}, {362, 941}, {845, 777}, {773, 845}, {131, 504}, {977, 437}, {2, 219}, {210, 98}, {86, 295}, {614, 387}, {680, 86}, {336, 922}, {733, 415}, {61, 937}, {813, 201}, {122, 187}, {772, 211}, {764, 334}, {475, 847}, {350, 72}, {312, 139}, {487, 87}, {754, 415}, {697, 135}, {950, 681}, {819, 280}, {685, 284}, {256, 46}, {555, 476}, {446, 215}, {106, 107}, {72, 384}, {5, 720}, {421, 569}, {357, 203}, {726, 364}, {224, 362}, {548, 890}, {68, 288}, {679, 934}, {393, 296}, {864, 768}, {92, 430}, {264, 83}, {117, 654}, {831, 7}, {706, 235}, {446, 880}, {625, 562}, {949, 69}, {994, 836}, {950, 954}, {387, 304}, {688, 246}, {394, 6}, {645, 270}, {470, 517}, {740, 752}, {775, 542}, {919, 697}, {81, 518}, {838, 768}, {182, 32}, {323, 912}, {265, 585}, {420, 690}, {867, 634}, {101, 992}, {609, 666}, {387, 243}, {732, 505}, {697, 927}, {192, 358}, {231, 642}, {581, 26}, {70, 208}, {233, 387}, {989, 298}, {597, 146}, {407, 714}, {675, 157}, {411, 280}, {671, 894}, {499, 808}},
		[]int{7, 46, 48, 62, 15, 4, 27, 20, 1, 29, 3, 68, 95, 14, 60, 63, 22, 82, 66, 76, 25, 16, 74, 17, 41, 81, 93, 89, 5, 19, 83, 54, 33, 57, 88, 96, 92, 65, 38, 42, 2, 9, 91, 50, 80, 79, 21, 98, 61, 32, 53, 84, 90, 10, 47, 51, 12, 94, 40, 99, 34, 43, 58, 30},
	},
}

func TestAssignBikes(t *testing.T) {
	for _, test := range tests {
		if res := assignBikes(test.workers, test.bikes); !reflect.DeepEqual(res, test.want) {
			t.Errorf("for %v and %v wanted\n %v, got\n %v", test.workers, test.bikes, test.want, res)
		}
	}
}

func BenchmarkAssignBikes(b *testing.B) {
	test := tests[len(tests)-1]

	for i := 0; i < b.N; i++ {
		assignBikes(test.workers, test.bikes)
	}
}
